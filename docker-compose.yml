version: '3.5'

services:
  db:
    #read_only: true
    image: postgres
    environment:
      POSTGRES_USER: app
    # ports:
    #   - '5432:5432'
    # volumes:
    #   - 'postgres:/var/lib/postgresql/data'
  redis:
    image: 'redis:latest'
    command: redis-server
    ports:
      - '6379:6379'
# c    volumes:
#       - 'redis:/data'
  app:
    stdin_open: true
    tty: true
    #read_only: true
    build:
      context: services/app
      dockerfile: Dockerfile.development
      # dockerfile: Dockerfile
    # command: sh -c "rm -f tmp/pids/server.pid && bin/rails s"
    command: sh -c "rm -f tmp/pids/server.pid && bin/rails s -b 0.0.0.0 -p3001"
      # env_file: ".env.development"
    ports:
      - "3001:3001"
    volumes: 
      - "~/.bash_history:/root/.bash_history"
      - "./services/app:/usr/src/app"
      - "/tmp:/tmp"
    depends_on:
      - db
      - redis
    links:
      - redis
    env_file:
      ".env"
  
  sidekiq:
    build:
      context: services/app
      dockerfile: Dockerfile.development
    command: sh -c "bundle exec sidekiq"
    links:
      - redis
    depends_on:
      - redis
      - db
    volumes:
      - "./services/app:/usr/src/app"
    env_file:
      - ".env"
  
  react-app:
  #   container_name: client-app
    build:
      context: services/react-app
      dockerfile: Dockerfile.development
    command: npm start
    # command: yarn start
    volumes:
      - './services/react-app:/usr/src/app'
      # - './services/react-app:/usr/src/app/node_modules'
    ports:
      - '8080:8080'
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
